diff --git a/Alif_CMSIS/Source/Driver_SPI.c b/Alif_CMSIS/Source/Driver_SPI.c
index cfc805b..0cff58c 100644
--- a/Alif_CMSIS/Source/Driver_SPI.c
+++ b/Alif_CMSIS/Source/Driver_SPI.c
@@ -74,6 +74,12 @@ __STATIC_INLINE ARM_SPI_CAPABILITIES ARM_SPI_GetCapabilities(void)
 }
 
 #if SPI_DMA_ENABLE
+/* PATCH: SPI_DMA_RX_Control() and SPI_DMA_TX_Control() functions added
+ *          for inserting custom DMA microcode
+ */
+#define USER_SPI_RX_MCODE_ENABLED 1
+#define USER_SPI_TX_MCODE_ENABLED 1
+
 /**
   \fn          int32_t SPI_DMA_Initialize(DMA_PERIPHERAL_CONFIG *dma_periph)
   \brief       Initialize DMA for SPI
@@ -187,6 +193,44 @@ static inline int32_t SPI_DMA_DeAllocate(DMA_PERIPHERAL_CONFIG *dma_periph)
     return ARM_DRIVER_OK;
 }
 
+/* PATCH: SPI_DMA_RX_Control() and SPI_DMA_TX_Control() functions added
+ *          for inserting custom DMA microcode
+ */
+#if USER_SPI_RX_MCODE_ENABLED
+static inline int32_t SPI_DMA_RX_Control(DMA_PERIPHERAL_CONFIG *dma_periph, ARM_DMA_PARAMS *dma_params)
+{
+    int32_t        status;
+    ARM_DRIVER_DMA *dma_drv = dma_periph->dma_drv;
+    extern uint8_t user_spi_rx_mcode[];
+
+    /* Insert custom microcode on RX side */
+    status = dma_drv->Control(&dma_periph->dma_handle, ARM_DMA_USER_PROVIDED_MCODE, (uint32_t) &user_spi_rx_mcode[0]);
+    if (status)
+    {
+        return ARM_DRIVER_ERROR;
+    }
+
+    return ARM_DRIVER_OK;
+}
+#endif
+#if USER_SPI_TX_MCODE_ENABLED
+static inline int32_t SPI_DMA_TX_Control(DMA_PERIPHERAL_CONFIG *dma_periph, ARM_DMA_PARAMS *dma_params)
+{
+    int32_t        status;
+    ARM_DRIVER_DMA *dma_drv = dma_periph->dma_drv;
+    extern uint8_t user_spi_tx_mcode[];
+
+    /* Insert custom microcode on TX side */
+    status = dma_drv->Control(&dma_periph->dma_handle, ARM_DMA_USER_PROVIDED_MCODE, (uint32_t) &user_spi_tx_mcode[0]);
+    if (status)
+    {
+        return ARM_DRIVER_ERROR;
+    }
+
+    return ARM_DRIVER_OK;
+}
+#endif
+
 /**
   \fn          int32_t SPI_DMA_Start(DMA_PERIPHERAL_CONFIG *dma_periph,
                                      ARM_DMA_PARAMS *dma_params)
@@ -1063,6 +1107,22 @@ static int32_t ARM_SPI_Transfer(SPI_RESOURCES *SPI, const void *data_out, void *
             rx_dma_params.burst_size = BS_BYTE_1;
         }
 
+        /* PATCH: SPI_DMA_RX_Control() and SPI_DMA_TX_Control() functions added
+         *          for inserting custom DMA microcode
+         */
+#if USER_SPI_RX_MCODE_ENABLED
+        if (SPI_DMA_RX_Control(&SPI->dma_cfg->dma_rx, &rx_dma_params) != ARM_DRIVER_OK)
+        {
+            return ARM_DRIVER_ERROR;
+        }
+#endif
+#if USER_SPI_TX_MCODE_ENABLED
+        if (SPI_DMA_TX_Control(&SPI->dma_cfg->dma_tx, &tx_dma_params) != ARM_DRIVER_OK)
+        {
+            return ARM_DRIVER_ERROR;
+        }
+#endif
+
         if (SPI_DMA_Start(&SPI->dma_cfg->dma_rx, &rx_dma_params) != ARM_DRIVER_OK)
         {
             return ARM_DRIVER_ERROR;
diff --git a/Alif_CMSIS/Source/Driver_USART.c b/Alif_CMSIS/Source/Driver_USART.c
index d6a0e31..e4e1eb1 100644
--- a/Alif_CMSIS/Source/Driver_USART.c
+++ b/Alif_CMSIS/Source/Driver_USART.c
@@ -163,6 +163,12 @@ static ARM_USART_CAPABILITIES ARM_USART_GetCapabilities_WO_RTS_CTS(void)
 }
 
 #if UART_DMA_ENABLE
+/* PATCH: UART_DMA_RX_Control() and UART_DMA_TX_Control() functions added
+ *          for inserting custom DMA microcode
+ */
+#define USER_UART_RX_MCODE_ENABLED 0
+#define USER_UART_TX_MCODE_ENABLED 1
+
 /**
   \fn          int32_t UART_DMA_Initialize(DMA_PERIPHERAL_CONFIG *dma_periph)
   \brief       Initialize DMA for UART
@@ -277,6 +283,46 @@ __STATIC_INLINE int32_t UART_DMA_DeAllocate(DMA_PERIPHERAL_CONFIG *dma_periph)
     return ARM_DRIVER_OK;
 }
 
+/* PATCH: UART_DMA_RX_Control() and UART_DMA_TX_Control() functions added
+ *          for inserting custom DMA microcode
+ */
+#if USER_UART_RX_MCODE_ENABLED
+__STATIC_INLINE int32_t UART_DMA_RX_Control(DMA_PERIPHERAL_CONFIG *dma_periph,
+                                      ARM_DMA_PARAMS *dma_params)
+{
+    int32_t        status;
+    ARM_DRIVER_DMA *dma_drv = dma_periph->dma_drv;
+    extern uint8_t user_uart_rx_mcode[];
+
+    /* Insert custom microcode on RX side */
+    status = dma_drv->Control(&dma_periph->dma_handle, ARM_DMA_USER_PROVIDED_MCODE, (uint32_t) &user_uart_rx_mcode[0]);
+    if(status)
+    {
+        return ARM_DRIVER_ERROR;
+    }
+
+    return ARM_DRIVER_OK;
+}
+#endif
+#if USER_UART_TX_MCODE_ENABLED
+__STATIC_INLINE int32_t UART_DMA_TX_Control(DMA_PERIPHERAL_CONFIG *dma_periph,
+                                      ARM_DMA_PARAMS *dma_params)
+{
+    int32_t        status;
+    ARM_DRIVER_DMA *dma_drv = dma_periph->dma_drv;
+    extern uint8_t user_uart_tx_mcode[];
+
+    /* Insert custom microcode on TX side */
+    status = dma_drv->Control(&dma_periph->dma_handle, ARM_DMA_USER_PROVIDED_MCODE, (uint32_t) &user_uart_tx_mcode[0]);
+    if(status)
+    {
+        return ARM_DRIVER_ERROR;
+    }
+
+    return ARM_DRIVER_OK;
+}
+#endif
+
 /**
   \fn          int32_t UART_DMA_Start(DMA_PERIPHERAL_CONFIG *dma_periph,
                                      ARM_DMA_PARAMS *dma_params)
@@ -786,6 +832,13 @@ static int32_t ARM_USART_Send (const void       *data,
             dma_params.burst_len = 16;
         }
 
+        /* PATCH: Insert custom DMA microcode */
+#if USER_UART_TX_MCODE_ENABLED
+        status = UART_DMA_TX_Control(&uart->dma_cfg->dma_tx, &dma_params);
+        if(status)
+            return ARM_DRIVER_ERROR;
+#endif
+
         /* Start DMA transfer */
         status = UART_DMA_Start(&uart->dma_cfg->dma_tx, &dma_params);
         if(status)
@@ -898,6 +951,13 @@ static int32_t ARM_USART_Receive (void             *data,
             dma_params.burst_len = 16;
         }
 
+        /* PATCH: Insert custom DMA microcode */
+#if USER_UART_RX_MCODE_ENABLED
+        status = UART_DMA_RX_Control(&uart->dma_cfg->dma_rx, &dma_params);
+        if(status)
+            return ARM_DRIVER_ERROR;
+#endif
+
         /* Start DMA transfer */
         status = UART_DMA_Start(&uart->dma_cfg->dma_rx, &dma_params);
         if(status)
diff --git a/Device/common/include/dma_mapping.h b/Device/common/include/dma_mapping.h
index 60ef5c5..141fb2c 100644
--- a/Device/common/include/dma_mapping.h
+++ b/Device/common/include/dma_mapping.h
@@ -662,7 +662,7 @@ extern "C" {
 #if (!RTE_LPUART_SELECT_DMA0)
 #define LPUART_DMA                     2
 #define LPUART_DMA_RX_PERIPH_REQ       8
-#define LPUART_DMA_TX_PERIPH_REQ       9
+#define LPUART_DMA_TX_PERIPH_REQ       25   /* NOTE: was 9 for LPUART_TX, now 25 for LPGPIO_1 */
 #define LPUART_DMA_GROUP               0
 #define LPUART_DMA_HANDSHAKE_ENABLE    1
 #endif
@@ -678,7 +678,7 @@ extern "C" {
 #if (!RTE_LPSPI_SELECT_DMA0)
 #define LPSPI_DMA                      2
 #define LPSPI_DMA_RX_PERIPH_REQ        12
-#define LPSPI_DMA_TX_PERIPH_REQ        13
+#define LPSPI_DMA_TX_PERIPH_REQ        26   /* NOTE: was 13 for LPSPI_TX, now 26 for LPGPIO_2 */
 #define LPSPI_DMA_GROUP                0
 #define LPSPI_DMA_HANDSHAKE_ENABLE     1
 #endif
